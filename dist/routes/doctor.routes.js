"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const doctor_controller_1 = require("../controller/doctor.controller");
const verifytoken_middleware_1 = __importDefault(require("../middleware/verifytoken.middleware"));
const checkdoctor_middleware_1 = __importDefault(require("../middleware/checkdoctor.middleware"));
const multer_middleware_1 = __importDefault(require("../middleware/multer.middleware"));
const router = express_1.default.Router();
router.post("/addPatient", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.addNewPatient);
router.post("/uploadLabResults/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, multer_middleware_1.default.single("labFile"), doctor_controller_1.uploadLabResults);
router.post("/addPatientDetails/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.addPatientDetails);
router.post("/addPatientReview/:patientDetailId", verifytoken_middleware_1.default, doctor_controller_1.addPatientReview);
router.post("/searchPatients", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.searchPatients);
router.post("/addPatientRequest/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.addPatientRequest);
router.post("/acceptAddRequest/:requestId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.acceptAddRequest);
router.get("/getPatientList", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getPatientList);
router.get("/getPatientDetails/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getPatientDetails);
router.get("/getPatientLabResults/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getPatientLabResults);
router.get("/getPatientReviews/:patientDetailId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getPatientReview);
router.get("/getAllAddRequests", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getAllAddRequests);
router.get("/getAllPatientInfo/:patientId", verifytoken_middleware_1.default, checkdoctor_middleware_1.default, doctor_controller_1.getAllPatientInfo);
exports.default = router;
